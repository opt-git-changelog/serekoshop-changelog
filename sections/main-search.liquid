{%- if section.settings.show_filters and search.filters.size > 0 -%}
  {%- assign show_filters = true -%}
{%- else -%}
  {%- assign show_filters = false -%}
{%- endif -%}

{%- assign active_filters = search.filters | where: 'active_values' -%}

{%- capture search_form -%}
  <form class="main-search-form" action="{{ routes.search_url }}" method="get" role="search">
    <input type="hidden" name="type" value="product">
    <input type="hidden" name="options[prefix]" value="last">
    <input type="hidden" name="options[unavailable_products]" value="last">

    <div class="v-stack gap-6 sm:gap-12">
      <div class="search-input">
        <input type="search" name="q" value="{{ search.terms | escape }}" placeholder="{{ 'search.general.search_placeholder' | t }}" autocomplete="off" autocorrect="off" spellcheck="false" aria-label="{{ 'search.general.title' | t | escape }}">
        <button type="submit">{%- render 'icon' with 'search' -%}</button>
      </div>

      {%- unless search.results_count > 0 -%}
        <div class="justify-self-center">
          {%- assign button_content = 'search.general.title' | t -%}
          {%- render 'button', type: 'submit', content: button_content, size: 'xl' -%}
        </div>
      {%- endunless -%}
    </div>
  </form>
{%- endcapture -%}

<style>
  {%- assign card_blends = false -%}

  {%- unless settings.background != 'rgba(0,0,0,0)' and settings.product_card_background != 'rgba(0,0,0,0)' and settings.background != settings.product_card_background -%}
    {%- assign card_blends = true -%}
  {%- endunless -%}

    .product-list {
      grid: var(--product-list-grid);
      gap: var(--product-list-gap);
      scroll-padding-top: calc(var(--sticky-area-height)  + 20px);
      display: grid;
      position: relative;
      margin: 0 -20px;
    }

    .product-card {
      --product-card-badge-spacing: var(--spacing-2);
      --product-card-info-padding: var(--spacing-4);
      --product-card-quick-buy-inset: var(--spacing-2);
      border-radius: var(--rounded-sm);
      grid-template-columns: minmax(0, 1fr);
      align-content: start;
      display: grid;
      position: relative;
      padding: 0 20px;
    }

    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: {{ section.settings.products_per_row_desktop }};
       --product-list-promo-grid-column: span 1;
      --product-list-gap: var(--spacing-13);
      --product-list-grid: auto-flow dense / repeat(var(--product-list-items-per-row), minmax(0, 1fr));
    }

    @media screen and (max-width: 1200px) {
      #shopify-section-{{ section.id }} {
        --product-list-items-per-row: {% if section.settings.filter_layout == 'sidebar' %}{{ section.settings.products_per_row_desktop | at_most: 3 }}{% else %}{{ section.settings.products_per_row_desktop }}{% endif %};
      }
    }

  
    @media screen and (max-width: 1000px) {
      #shopify-section-{{ section.id }} {
        --product-list-items-per-row: {% if section.settings.filter_layout == 'sidebar' %}2{% else %}{{ section.settings.products_per_row_desktop | at_most: 3 }}{% endif %};
        --product-list-promo-grid-column: span 2;
      }
    }

  @media screen and (max-width: 999px) {
      #shopify-section-{{ section.id }} {
        overflow-x: hidden;
      }
    }

    @media screen and (max-width: 767px) {
      #shopify-section-{{ section.id }} {
        --product-list-gap: {% if section.settings.products_per_row_mobile == '2' %}{% if card_blends %}var(--product-list-row-gap){% endif %} var(--spacing-2){% else %}var(--product-list-row-gap) var(--product-list-column-gap){% endif %};
        --product-list-items-per-row: {{ section.settings.products_per_row_mobile | times: 1 }};
        --product-list-grid: auto-flow dense / repeat(var(--product-list-items-per-row), minmax(0, 1fr));
        --product-list-promo-grid-column: span {{ section.settings.products_per_row_mobile }};
    
        --content-over-media-gap: var(--spacing-8);
      }

      .product-list {
        margin: 0 -10px;
      }
      
      .product-card {
        padding: 0 10px;
      }
    }


  @media only screen and (min-width: 1000px) and (max-width: 1199px){
    .collection--filters-sidebar{
      {% if section.settings.filter_layout == 'sidebar' %} padding: 20px;{% endif %}
    }
  }

    {%- for block in section.blocks -%}
      #block-{{ section.id }}-{{ block.id }} {
        --product-list-promo-grid-column: span {{ block.settings.column_span }};

        {%- if block.settings.column_span == '2' -%}
          --content-over-media-column-gap: var(--spacing-12);
        {%- endif -%}
      }
    {%- endfor -%}
  }
</style>

<style>
  {% comment %}
  {%- assign card_blends = false -%}

  {%- unless settings.background != 'rgba(0,0,0,0)' and settings.product_card_background != 'rgba(0,0,0,0)' and settings.background != settings.product_card_background -%}
    {%- assign card_blends = true -%}
  {%- endunless -%}

  #shopify-section-{{ section.id }} {
    --product-list-gap: {% if section.settings.products_per_row_mobile == '2' %}{% if card_blends %}var(--product-list-row-gap){% endif %} var(--spacing-2){% else %}var(--product-list-row-gap) var(--product-list-column-gap){% endif %};
    --product-list-items-per-row: {{ section.settings.products_per_row_mobile | times: 1 }};
    --product-list-grid: auto-flow dense / repeat(var(--product-list-items-per-row), minmax(0, 1fr));

    --content-over-media-gap: var(--spacing-8);
  }

  @media screen and (min-width: 700px) {
    #shopify-section-{{ section.id }} {
      --product-list-gap: var(--product-list-row-gap) var(--product-list-column-gap);
      --product-list-items-per-row: 2;
    }
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: {% if section.settings.filter_layout == 'sidebar' %}2{% else %}{{ section.settings.products_per_row_desktop | at_most: 3 }}{% endif %};
    }
  }

  @media screen and (min-width: 1200px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: {% if section.settings.filter_layout == 'sidebar' %}{{ section.settings.products_per_row_desktop | at_most: 3 }}{% else %}{{ section.settings.products_per_row_desktop }}{% endif %};
    }
  }

  @media screen and (min-width: 1400px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: {{ section.settings.products_per_row_desktop }};
    }
  }
  {% endcomment %}
</style>

{% assign show_article = false %}
{%- for search_res in search.results -%}
  {% if search.types contains 'article' and search_res.object_type == 'article' %}
    {% assign show_article = true %}
  {% endif %}
{% endfor %}

<div class="container collection-grid-container">
  {%- if search.performed and search.results_count > 0 or active_filters.size > 0 -%}
    <div class="page-spacer">
      <div class="v-stack gap-6 sm:gap-8">
        <div class="side-page-wrap">          
          <h1 class="h2 text-center">
            {% if show_article %}
              {% assign count = 0 %}
              {%- assign article_results = search.results | where: 'object_type', 'article' -%}
              {%- for article in article_results -%}
                {% assign blogTitle = article.handle | split: '/' | first %}
                {% if blogs[blogTitle].template_suffix == 'glossary' %}
                  {% assign count = count | plus:1 %}
                {% endif %}
              {% endfor %}
              {{- 'search.results_count' | t: count: count, terms: search.terms -}}
            {% else %}
              {{- 'search.results_count' | t: count: search.results_count, terms: search.terms -}}
            {% endif %}
          </h1>
        </div>
        {{- search_form -}}
      </div>

      {%- paginate search.results by section.settings.products_per_page -%}
        <div class="collection{% if show_article %} search-result-articles{% endif %}{% if show_filters %} collection--filters-{{ section.settings.filter_layout | escape }}{% endif %}{%- if show_filters and section.settings.filter_layout == 'sidebar' and section.settings.products_per_row_desktop == 4 -%} sidebar_with_four{%- endif -%}">
          {%- if show_filters or section.settings.show_sort_by and show_article == false -%}
            {%- comment -%}
              IMPLEMENTATION NOTE: we have to output the drawer no matter what, as it is used on mobile (all the time) or desktop (when in drawer mode)
            {%- endcomment -%}

            <facet-drawer header-bordered id="facets-drawer" class="facets-drawer drawer" open-from="left">
              <p class="h5" slot="title">{{ 'collection.faceting.filters' | t }}</p>
              {%- render 'facets-vertical', results: search, show_filters: true, show_sort_by: section.settings.show_sort_by, update_on_change: false -%}
            </facet-drawer>

            {%- if section.settings.filter_layout == 'horizontal' -%}
              {%- render 'collection-top-bar', results: search, show_filters: show_filters, show_active_filters: show_filters, show_sort_by: section.settings.show_sort_by -%}
            {%- else -%}
              {%- render 'collection-top-bar', results: search, show_filters: false, show_active_filters: show_filters, show_sort_by: section.settings.show_sort_by -%}
            {%- endif -%}

            {%- comment -%}We also need to render the button, that is floating on mobile{%- endcomment -%}
            <facet-floating-filter class="facets__floating-filter md:hidden">
              {%- assign filter_label = 'collection.faceting.filter_and_sort' | t -%}
              {%- render 'button', size: 'xl', secondary: true, content: filter_label, icon: 'filter', style: 'fill', aria_controls: 'facets-drawer' -%}
            </facet-floating-filter>
          {%- endif -%}

          {%- if show_filters and section.settings.filter_layout == 'sidebar' -%}
            <div class="collection__facets">
              <safe-sticky class="collection__facets-scroller">
                {%- render 'facets-vertical', results: search, show_filters: true, show_sort_by: false, update_on_change: true -%}
              </safe-sticky>
            </div>
          {%- endif -%}

          <div class="collection__results">
            {%- if search.results_count == 0 -%}
              <div class="empty-state">
                <div class="empty-state__icon-wrapper">
                  {%- render 'icon' with 'picto-stop', width: 32, height: 32, stroke_width: 1 -%}
                  <span class="count-bubble count-bubble--lg">0</span>
                </div>

                <div class="prose">
                  <p class="h5">{{ 'collection.faceting.no_results' | t }}</p>

                  {%- assign button_content = 'collection.faceting.clear_filters' | t -%}
                  {%- render 'button', href: collection.url, is: 'facet-link', size: 'xl', content: button_content -%}
                </div>
              </div>
            {%- else -%}
              {%- assign product_results = search.results | where: 'object_type', 'product' -%}
              {% assign pro_size = product_results | size %}

              {% if show_article %}
                <div class="bl_grid">
                  <div class="news-listing">
                    {%- assign article_results = search.results | where: 'object_type', 'article' -%}
                    {%- for article in article_results -%}
                      {% assign blogTitle = article.handle | split: '/' | first %}
                      {% if blogs[blogTitle].template_suffix == 'glossary' %}
                        <article class="news-article">
                          <div class="news-item-box">
                            <div class="news__image">
                              <div class="news-size-cover">
                                <a href="javascript:void(0)" class="news__image-link">
                                  {% if article.metafields.article.hover_image != blank %}
                                    <img src="{{ article.metafields.article.hover_image | img_url:'452x' }}" alt="cortisol"/>
                                  {% endif %}
                                </a>      
                              </div>
                              <div class="news_text">
                                <div class="news-head"><h2>{{ article.title }}</h2></div>
                                <div class="news-foot">
                                  {% if article.excerpt != blank %}
                                    <p class="news__para">{{ article.excerpt | replace:'<p>', '' | replace:'</p>', '' }}</p>
                                  {% endif %}
                                  <a href="javascript:void(0)" class="news__cta">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 47">
                                      <path d="M0.826214 46.9974C0.10355 46.8657 -0.261284 45.925 0.321238 45.3478L25.6537 23.4843L0.321238 1.6208C0.321238 1.6208 -0.0945168 1.18288 0.0199318 0.691334C0.164278 0.0709076 0.987846 -0.220253 1.53767 0.191795L27.6975 22.7698C28.095 23.1621 28.1067 23.7948 27.6975 24.1988L1.53767 46.7768C1.38071 46.894 1.3438 47.0196 0.826214 46.9974Z"/>
                                    </svg>
                                  </a>
                                </div>
                              </div>
                            </div>
                          </div>
                        </article>
                      {% endif %}
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
              {% if pro_size > 0 %}
                <div class="v-stack gap-6">
                  <div class="v-stack gap-4 md:hidden">
                    {%- comment -%}We have to duplicate some information on mobile and tablet here{%- endcomment -%}
                    {%- render 'active-facets', results: search -%}
                  </div>
                  <reveal-items selector=".product-list > *">
                    <product-list class="product-list" role="region" aria-live="polite">
                      {%- for product in product_results -%}
                        {%- render 'product-card', product: product, stacked: true, layout: section.settings.filter_layout, show_badges: true -%}
                      {%- endfor -%}
                    </product-list>
                  </reveal-items>
                </div>
              {% endif %}
            {%- endif -%}
          </div>

          {%- render 'pagination', paginate: paginate, facet: true, class: 'collection__pagination' -%}
        </div>
      {%- endpaginate -%}
    </div>
  {%- else -%}
    <div class="empty-state">
      <div class="side-page-wrap">
        <h1 class="h2{% unless search.performed %} side-page-title{% endunless %}">
          {%- if search.performed -%}
            {{- 'search.general.no_results' | t -}}
          {%- else -%}
            {{- 'search.general.title' | t -}}
          {%- endif -%}
        </h1>
      </div>
      {{- search_form -}}
    </div>
  {%- endif -%}
</div>

{% schema %}
{
  "name": "Search",
  "class": "shopify-section--main-search",
  "tag": "section",
  "settings": [
      {
      "type": "range",
      "id": "products_per_page",
      "label": "Products per page",
      "min": 8,
      "max": 50,
      "step": 1,
      "default": 24
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "Products per row (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "select",
      "id": "products_per_row_desktop",
      "label": "Products per row (desktop)",
      "options": [
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        }
      ],
      "default": "3"
    },
    {
      "type": "header",
      "content": "Filters & sort"
    },
    {
      "type": "select",
      "id": "filter_layout",
      "label": "Desktop layout",
      "options": [
        {
          "value": "sidebar",
          "label": "Sidebar"
        },
        {
          "value": "horizontal",
          "label": "Horizontal"
        },
        {
          "value": "drawer",
          "label": "Drawer"
        }
      ],
      "default": "sidebar"
    },
    {
      "type": "checkbox",
      "id": "show_sort_by",
      "label": "Show sort by",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters",
      "info": "[Customize filters](/admin/menus)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filter_group_name",
      "label": "Show group name",
      "info": "Group name will be shown inside selected filters.",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_color_swatch",
      "label": "Show filter color swatch",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_empty_filter_values",
      "label": "Show empty filter values",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_filter_values_count",
      "label": "Show filter values count",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "open_first_filter_group",
      "label": "Open first group by default",
      "default": false
    }
  ]
}
{% endschema %}